% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stableInverse.R
\name{stableInverse}
\alias{stableInverse}
\title{A function to compute inverses by eigenvalue decomposition, avoiding computational singularities}
\usage{
stableInverse(mat, threshold = 1e-10)
}
\arguments{
\item{mat}{A square matrix object whose inverse is desired.}

\item{threshold}{Eigenvalues below this threshold will be dropped and an approximate inverse will be returned.}
}
\value{
The inverse of the input matrix.
}
\description{
\code{stableInverse} is a function designed to approximate the inverse of a square matrix which is computationally singular. It does this by using the eigenvalue decomposition of the matrix.
}
\details{
In inverting the Fisher information matrix, e.g. as required by the \code{\link{CPOptimality}} utility function, it often happens that one or more of the eigenvalues are very close to zero. This results in a computational singularity; i.e. the matrix cannot be inverted. This may occur in spite of the Fisher information matrix being analytically symmetric positive definite. In this case, the eigenvalue decomposition of the matrix is computed. Any eigenvalues below a threshold (by default, 1e-10) will be omitted and so will the corresponding eigenvectors in the diagonalised matrix equation VUV' where V is the matrix containing the eigenvectors as columns and U is the diagonal matrix of the eigenvalues. This matrix equation will still return a matrix of the same dimensions as the original matrix. This resulting matrix will be approximately equal to the inverse of the original matrix.
}
